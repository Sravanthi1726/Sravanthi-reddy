class OnlineShopping {
    private boolean paymentCompleted = false;

    // Synchronized method to confirm the order
    public synchronized void confirmOrder() {
        try {
            while (!paymentCompleted) {
                System.out.println("Waiting for payment to complete...");
                wait();  // Wait until payment is completed
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println("Order confirmed!");
    }

    // Synchronized method to complete the payment
    public synchronized void completePayment() {
        System.out.println("Completing payment...");
        paymentCompleted = true;
        notify();  // Notify the waiting thread that payment is completed
    }
}

public class Main {
    public static void main(String[] args) {
        OnlineShopping shopping = new OnlineShopping();

        // Thread for confirming the order
        Thread orderThread = new Thread(new Runnable() {
            @Override
            public void run() {
                shopping.confirmOrder();
            }
        });

        // Thread for completing the payment
        Thread paymentThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    // Simulate payment processing time
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                shopping.completePayment();
            }
        });

        orderThread.start();
        paymentThread.start();
    }
}
output:
Waiting for payment to complete...
Completing payment...
Order confirmed!